name: Docker-NetLink

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Download amd64 binary
      if: matrix.arch == 'amd64'
      run: |
        mkdir -p binary/amd64/vnt
        curl -L -o binary/amd64/app.tar.gz \
        "https://github.com/lbl8603/vnt/releases/download/1.2.11/vnt-x86_64-unknown-linux-musl-1.2.11.tar.gz"
        tar -xzvf binary/amd64/app.tar.gz -C binary/amd64/vnt
        ls -alh binary/amd64

    - name: Download arm64 binary
      if: matrix.arch == 'arm64'
      run: |
        mkdir -p binary/arm64/vnt
        curl -L -o binary/arm64/app.tar.gz \
        "https://github.com/lbl8603/vnt/releases/download/1.2.11/vnt-aarch64-unknown-linux-musl-1.2.11.tar.gz"
        tar -xzvf binary/arm64/app.tar.gz -C binary/arm64/vnt
        ls -alh binary/arm64

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_REGISTRY_USER }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

    - name: Build and push Docker image for amd64
      if: matrix.arch == 'amd64'
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile.amd64
        platforms: linux/amd64
        push: true
        tags: haoxuan8855/vnt:x64

    - name: Build and push Docker image for arm64
      if: matrix.arch == 'arm64'
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile.arm64
        platforms: linux/arm64
        push: true
        tags: haoxuan8855/vnt:arm64
